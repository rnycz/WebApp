@model Magazyn.Models.Product

@{
    ViewBag.Title = "Edytuj";
}

<h1>Edytuj</h1>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Produkt</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EAN, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EAN, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EAN, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    @{
        List<SelectListItem> listUnit = new List<SelectListItem>();
        listUnit.Add(new SelectListItem { Text = "Metr", Value = "Metr" });
        listUnit.Add(new SelectListItem { Text = "Kilogram", Value = "Kilogram" });
        listUnit.Add(new SelectListItem { Text = "Gram", Value = "Gram" });
        listUnit.Add(new SelectListItem { Text = "Sztuka", Value = "Sztuka" });
    }
    <div class="form-group">
        @Html.LabelFor(model => model.Unit, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Unit, listUnit, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Unit, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Availability, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Availability, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Availability, "", new { @class = "text-danger" })
        </div>
    </div>

    @{
        List<SelectListItem> listCategory = new List<SelectListItem>();
        listCategory.Add(new SelectListItem { Text = "Ogród", Value = "Ogród" });
        listCategory.Add(new SelectListItem { Text = "Budowa", Value = "Budowa" });
        listCategory.Add(new SelectListItem { Text = "Mieszkanie", Value = "Mieszkanie" });
        listCategory.Add(new SelectListItem { Text = "Technika", Value = "Technika" });
    }
    <div class="form-group">
        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Category, listCategory, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Zapisz" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Powrót do listy", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
